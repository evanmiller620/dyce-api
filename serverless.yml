# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: dyceapi
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: dyceapi
service: express-api
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: main
  stackName: dyce-api-main
  logs:
    frameworkLambda: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:*:table/DyceTable"


plugins:
  - serverless-domain-manager

# https://www.serverless.com/plugins/serverless-domain-manager
custom:
  customDomain:
    domainName: dyce.live
    stage: ${opt:stage, self:provider.stage}
    basePath: '' # cahnge Api base path, ex /v1
    certificateName: dyce.live
    certificateArn: arn:aws:acm:us-east-1:057172434278:certificate/662d8dd1-d4e9-45e1-8ced-764fd4464e7a
    createRoute53Record: false
    createRoute53IPv6Record: false
    endpointType: REGIONAL
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: true

functions:
  app:
    handler: index.handler
    events:
      - http:
          path: /
          method: GET
      - http:
          path: "{proxy+}" # catch-all route
          method: ANY
